{"version":3,"sources":["components/GithubProfiles.js","components/Nav.js","components/Home.js","components/NotFound.js","actions.js","components/Logout.js","App.js","LoginManager.js","reportWebVitals.js","registerServiceWorker.js","helpers.js","reducers/toDosReducer.js","reducers/authenticationReducer.js","reducers/index.js","index.js"],"names":["GithubProfiles","props","state","className","Component","Nav","exact","to","activeClassName","Home","HOC","comp","NotFound","types","Logout","onClick","this","handleLogoutDispatch","connect","dispatch","type","payload","text","App","path","component","render","LoginManager","username","pass","handleLogin","bind","handleChangeInputValue","event","preventDefault","handleLoginDispatch","alert","console","log","target","value","setState","name","stateLoggedIn","id","placeholder","onChange","authenticationReducer","isLoggedIn","login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","generateId","Math","floor","random","initialState","todos","isComplete","owner","reducer","action","newId","store","getState","newTodo","updatedTodos","index","findIndex","item","todo","updatedTodo","slice","removeIndex","rootReducer","combineReducers","toDosReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.748db25c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass GithubProfiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\"> GITHUB PROFILES</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GithubProfiles;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render(){\r\n      return(\r\n        <ul className=\"nav\">\r\n            <li>\r\n                <NavLink exact to=\"/combineReducersTest/\" activeClassName=\"active\"> Home </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/combineReducersTest/githubProfiles\" activeClassName=\"active\"> GithubProfiles </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/combineReducersTest/logout\" activeClassName=\"active\"> Logout </NavLink>\r\n            </li>\r\n        </ul>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render(){\r\n      return(\r\n        <div className=\"home-container\">\r\n            <h1>\r\n                Estas en home\r\n            </h1>\r\n            <Link to=\"/combineReducersTest/GithubProfiles\" className=\"button\">GithubProfiles</Link>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst HOC = (comp) => {\r\n  return (\r\n    <div className=\"debug\">\r\n      <Home />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HOC;","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render(){\r\n      return(\r\n        <div className=\"home-container\">\r\n            <h1>\r\n                Se equivoc√≥ de ruta\r\n            </h1>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default NotFound;","export const types = {\r\n    ADD_TODO: \"ADD_TODO\",\r\n    TOOGLE_TODO: \"TOOGLE_TODO\",\r\n    REMOVE_TODO: \"REMOVE_TODO\",\r\n    LOGOUT: 'LOGOUT',\r\n    LOGIN: 'LOGIN'\r\n  }\r\n   \r\n  export const logout = (text) => {\r\n    return {\r\n    type: types.LOGOUT,\r\n    payload: text\r\n    };\r\n  };\r\n  \r\n  export const login = (username, pass) => {\r\n    return {\r\n    type: types.LOGIN,\r\n    payload: {username, pass}\r\n    };\r\n  };\r\n  \r\n  export const addTodo = text => {\r\n    return {\r\n      type: types.ADD_TODO,\r\n      payload: text\r\n    };\r\n  };\r\n  \r\n  export const toogleTodo = id => {\r\n    return {\r\n      type: types.TOOGLE_TODO,\r\n      payload: id\r\n    };\r\n  };\r\n  \r\n  export const removeTodo = id => {\r\n    return {\r\n      type: types.REMOVE_TODO,\r\n      payload: id\r\n    };\r\n  };\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions\";\r\n\r\nclass Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render(){\r\n      return(\r\n        <div className=\"home-container\">\r\n            <h1>\r\n                Logout\r\n            </h1>\r\n            <button onClick={this.props.handleLogoutDispatch}>Logout</button>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleLogoutDispatch: () => {\r\n      return dispatch(logout());\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (Logout);","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport GithubProfiles from \"./components/GithubProfiles\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\nimport NotFound from \"./components/NotFound\";\nimport Logout from \"./components/Logout\";\n\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        \n        <BrowserRouter>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/combineReducersTest/\" component={Home}></Route>\n            <Route path=\"/combineReducersTest/githubProfiles\" component={GithubProfiles}></Route>\n            <Route path=\"/combineReducersTest/logout\" render={() => <Logout />}></Route>\n            <Route component={NotFound}></Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport App from './App'\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"./actions\";\r\n\r\nclass LoginManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            pass: ''\r\n        }\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleChangeInputValue = this.handleChangeInputValue.bind(this);\r\n    }\r\n\r\n    handleLogin(event) {\r\n        event.preventDefault();\r\n        if(this.state.pass != '' && this.state.username != '') {\r\n            this.props.handleLoginDispatch(this.state.username, this.state.pass);\r\n          }\r\n        else {\r\n            alert('You need to complete the information');\r\n            console.log(this.state.pass);\r\n            console.log(this.state.username);\r\n        }\r\n\r\n    }\r\n\r\n    handleChangeInputValue(event) {\r\n        console.log(event.target.value);\r\n        this.setState({[event.target.name]: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { stateLoggedIn } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Bienvenido</p>\r\n                {stateLoggedIn ?\r\n                    <App />\r\n                    :\r\n                    <div>\r\n                        <input id=\"username\" name=\"username\" placeholder=\"nombre\" value={this.state.username} onChange={this.handleChangeInputValue} />\r\n                        <input id=\"pass\" name=\"pass\" placeholder=\"edad\" value={this.state.pass} onChange={this.handleChangeInputValue} />\r\n                        <button onClick={this.handleLogin}>Login</button>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stateLoggedIn: state.authenticationReducer.isLoggedIn\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      handleLoginDispatch: (username, pass) => {\r\n        return dispatch(login(username, pass));\r\n      },\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginManager);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const generateId = () => Math.floor(Math.random() * 1000000);\r\n","import { generateId } from \"../helpers\";\r\nimport { types } from \"../actions\";\r\nimport store from \"../index\";\r\n\r\nconst initialState = {\r\n  todos: [\r\n    { id: 1, name: \"Learn React\", isComplete: false, owner: \"Default\" },\r\n    { id: 2, name: \"Learn Redux\", isComplete: true, owner: \"Default\" },\r\n    { id: 3, name: \"Learn ReactNative \", isComplete: false, owner: \"Default\" },\r\n    { id: 4, name: \"Learn NodeJS\", isComplete: false, owner: \"Default\" }\r\n  ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if (action.type === types.ADD_TODO) {\r\n      const newId = generateId();\r\n      console.log(store.getState().authenticationReducer.username);\r\n      const newTodo = { id: newId, name: action.payload, isComplete: false, owner: store.getState().authenticationReducer.username };\r\n      const updatedTodos = [...state.todos, newTodo];\r\n      return {\r\n        ...state,\r\n        todos: updatedTodos\r\n      };\r\n    }\r\n    if (action.type === types.TOOGLE_TODO) {\r\n      const index = state.todos.findIndex(item => item.id === action.payload);\r\n      const todo = state.todos[index];\r\n      const updatedTodo = { ...todo, isComplete: !todo.isComplete };\r\n      const updatedTodos = [\r\n        ...state.todos.slice(0, index),\r\n        updatedTodo,\r\n        ...state.todos.slice(index + 1)\r\n      ];\r\n  \r\n      return {\r\n        ...state,\r\n        todos: updatedTodos\r\n      };\r\n    }\r\n    if (action.type === types.REMOVE_TODO) {\r\n      const removeIndex = state.todos.findIndex(\r\n        item => item.id === action.payload\r\n      );\r\n      const updatedTodos = [\r\n        ...state.todos.slice(0, removeIndex),\r\n        ...state.todos.slice(removeIndex + 1)\r\n      ];\r\n  \r\n      return {\r\n        ...state,\r\n        todos: updatedTodos\r\n      };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;","import { generateId } from \"../helpers\";\r\nimport { types } from \"../actions\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    username: '',\r\n    pass: ''\r\n  };\r\n  \r\nconst reducer = (state = initialState, action) => {\r\n    if (action.type === types.LOGOUT) {\r\n        return { ...state, isLoggedIn: initialState.isLoggedIn, pass: initialState.pass, username: initialState.username };\r\n      } \r\n      if (action.type === types.LOGIN) {\r\n          console.log(action.payload.username);\r\n        return { ...state, isLoggedIn: true, username: action.payload.username, pass: action.payload.pass };\r\n      }\r\n    \r\n    return state;\r\n};\r\n    \r\nexport default reducer;\r\n    ","import { combineReducers } from 'redux'\r\nimport toDosReducer from './toDosReducer'\r\nimport authenticationReducer from './authenticationReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  authenticationReducer,\r\n  toDosReducer, \r\n})\r\n\r\n// Lo anterior es lo mismo que esto:\r\n// const rootReducer = (state = {}, action) => {\r\n//   return {\r\n//     auth: auth(state.auth, action),\r\n//     todos: todos(state.todos, action),\r\n//     visibilityFilter: visibilityFilter(state.visibilityFilter, action)\r\n//   }\r\n// }\r\n\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LoginManager from './LoginManager';\nimport reportWebVitals from './reportWebVitals';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\n\nlet store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n//Esto es para habilitar Redux Dev Tools\n\nReactDOM.render(\n  <Provider store={store}>\n    <LoginManager />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nexport default store;"],"sourceRoot":""}